1. Write an SQL query to fetch “FIRST_NAME” from the Employee table using the alias name <EMPLOYEE_NAME>.
= Select FIRST_NAME AS EMPLOYEE_NAME from Employee;

2. Write an SQL query to fetch “FIRST_NAME” from the Employee table in upper case.
=  Select upper(FIRST_NAME) from Employee;

3. Write an SQL query to fetch unique values of DEPARTMENT from the Employee table
= Select distinct DEPARTMENT from Employee;

4.  Write an SQL query to print the first three characters of  FIRST_NAME from the Employee table.
=  Select substring(FIRST_NAME,1,3) from Employee;

5.  Write an SQL query to find the position of the alphabet (‘r’) in the first name column ‘raviraj’ from the Employee table
=  Select INSTR(FIRST_NAME, BINARY'r') from Employee where FIRST_NAME = ‘raviraj’;

6.  Write an SQL query to print the FIRST_NAME from the Employee table after removing white spaces from the right side.
=  Select RTRIM(FIRST_NAME) from Employee;

7. Write an SQL query to print the DEPARTMENT from the Employee table after removing white spaces from the left side.
= Select LTRIM(DEPARTMENT) from Employee;

8.Write an SQL query to print the FIRST_NAME from the Employee table after replacing ‘r’ with ‘R’.
=  Select REPLACE(FIRST_NAME,'r','R') from Employee ;

9. Write an SQL query to print the FIRST_NAME and LAST_NAME from the Employee table into a single column COMPLETE_NAME. A space char should separate them.
=  Select CONCAT(FIRST_NAME, ' ', LAST_NAME) AS 'COMPLETE_NAME' from Employee ;

10. Write an SQL query to print all Employee details from the Employee table order by FIRST_NAME Ascending.
=  Select * from Employee order by FIRST_NAME asc;

11. Write an SQL query to print all Employee details from the Employee table order by FIRST_NAME Ascending and DEPARTMENT Descending
= Select * from Employee order by FIRST_NAME asc,DEPARTMENT desc;

12.  Write an SQL query to print details for Employee with the first names “ravi” and “akshay” from the Employee table.
=  Select * from Employee where FIRST_NAME in ('ravi','akshay');

13. Write an SQL query to print details of Employee with DEPARTMENT name as “Admin”
=  Select * from Employee where DEPARTMENT like 'Admin%';

14. Write an SQL query to print details of the Employee whose FIRST_NAME contains ‘a’.
=  Select * from Employee where FIRST_NAME like '%a%';

15.  Write an SQL query to print details of the Employee whose FIRST_NAME ends with ‘j’.
=   Select * from Employee where FIRST_NAME like '%j';

16. Write an SQL query to print details of the Employees whose FIRST_NAME ends with ‘h’ and contains six alphabets.
=   Select * from Employee where FIRST_NAME like '_____h';

17. Write an SQL query to print details of the Employees whose SALARY lies between 100000 and 500000.
=  Select * from Employee where SALARY between 100000 and 500000;

18. Write an SQL query to print details of the Employees who joined in Feb’2014.
=   Select * from Employee where year(JOINING_DATE) = 2014 and month(JOINING_DATE) = 2;

19. Write an SQL query to fetch the count of employees working in the department ‘Admin’.
=  SELECT COUNT(*) FROM Employee WHERE DEPARTMENT = 'Admin';

20. Write an SQL query to fetch Employee names with salaries >= 50000 and <= 100000.
 =  SELECT CONCAT(FIRST_NAME, ' ', LAST_NAME) As Employee_Name, Salary
	FROM Employee 
	WHERE Employee_ID IN 
	(SELECT Employee_ID FROM Employee 
	WHERE Salary BETWEEN 50000 AND 100000);
	
23) Write an SQL query to fetch the no. of Employees for each department in descending order.
-> SELECT DEPARTMENT, count(Employee_ID) No_Of_Employees 
	FROM Employee 
	GROUP BY DEPARTMENT 
	ORDER BY No_Of_Employees DESC;
	
24) Write an SQL query to print details of the Employees who are also Managers.
-> SELECT DISTINCT W.FIRST_NAME, T.Employee_TITLE
	FROM Employee W
	INNER JOIN Title T
	ON W.Employee_ID = T.Employee_REF_ID
	AND T.Employee_TITLE in ('Manager');
	
25) Write an SQL query to fetch duplicate records having matching data in some fields of a table.
-> SELECT Employee_TITLE, AFFECTED_FROM, COUNT(*)
	FROM Title
	GROUP BY Employee_TITLE, AFFECTED_FROM
	HAVING COUNT(*) > 1;

25.Write an SQL query to show only odd rows from a table.
= SELECT * FROM Employee WHERE MOD (EMPLOYEE_ID, 2) <> 0;

26.Write an SQL query to clone a new table from another table.
= SELECT * INTO EmployeeClone FROM Employee 

27.Write an SQL query to fetch intersecting records of two tables
= (SELECT * FROM Employee 
INTERSECT
(SELECT * FROM EmployeeClone );

28.Write an SQL query to show records from one table that another table does not have
=  SELECT * FROM Employee 
MINUS
SELECT * FROM Title;

29.Write an SQL query to show the current date and time
= SELECT CURDATE();

30.Write an SQL query to show the top n (say 10) records of a table.
= SELECT * FROM Employee ORDER BY Salary DESC LIMIT 10;

31.Write an SQL query to determine the nth (say n=5) highest salary from a table.
= SELECT Salary FROM Employee ORDER BY Salary DESC LIMIT n-1,1;

32. Write an SQL query to determine the 5th highest salary without using the TOP or limit method.
=SELECT Salary
FROM Employee E1
WHERE 4 = (
 SELECT COUNT( DISTINCT ( E2.Salary ) )
 FROM Employee E2
 WHERE E2.Salary >= E1.Salary
 );

33.Write an SQL query to fetch the list of employees with the same salary
= Select distinctE.EMPLOYEE_ID, E.FIRST_NAME, E.Salary 
from Employee E, Employee E1 
where E.Salary = E1.Salary 
and E.EMPLOYEE_ID != E1.EMPLOYEE_ID;

34.Write an SQL query to show one row twice in the results from a table.
= select FIRST_NAME, DEPARTMENT from Employee E where E.DEPARTMENT='HR' 
union all 
select FIRST_NAME, DEPARTMENT from Employee E1 where E1.DEPARTMENT='HR';

35.Write an SQL query to fetch intersecting records of two tables
=(SELECT * FROM Employee )
INTERSECT
(SELECT * FROM EmployeeClone);

36.Write an SQL query to fetch the first 50% of records from a table.
=SELECT *
FROM EMPLOYEE
WHERE EMPLOYEE_ID <= (SELECT count(EMPLOYEE_ID)/2 from Employee );

37.Write an SQL query to fetch the departments that have less than five people in them.
= SELECT DEPARTMENT, COUNT(EMPLOYEE_ID) as 'Number of Employee ' FROM Employee  GROUP BY DEPARTMENT HAVING COUNT(EMPLOYEE_ID) < 5;

38.Write an SQL query to show all departments along with the number of people in there.
=SELECT DEPARTMENT, COUNT(DEPARTMENT) as 'Number of Employee ' FROM Employee GROUP BY DEPARTMENT;

39.Write an SQL query to fetch the first row of a table.
=Select * from Employee where EMPLOYEE_ID = (SELECT min(EMPLOYEE_ID) from Employee );

40.Write an SQL query to fetch the last five records from a table.
= SELECT * FROM Worker WHERE EMPLOYEE_ID <=5
UNION
SELECT * FROM (SELECT * FROM Employee E order by E.EMPLOYEE_ID DESC) AS E1 WHERE E1.EMPLOYEE_ID <=5;

41. Write an SQL query to print the name of employees having the highest salary in each department.
= SELECT t.DEPARTMENT,t.FIRST_NAME,t.Salary from(SELECT max(Salary) as TotalSalary,DEPARTMENT from Employee group by DEPARTMENT) as TempNew 
Inner Join Employee t on TempNew.DEPARTMENT=t.DEPARTMENT 
 and TempNew.TotalSalary=t.Salary;

42.Write an SQL query to fetch three max salaries from a table.
=  SELECT distinct Salary from Employee a WHERE 3 >= (SELECT count(distinct Salary) from Employee b WHERE a.Salary <= b.Salary) order by a.Salary desc;

43.Write an SQL query to fetch nth max salaries from a table
=SELECT distinct Salary from Employee a WHERE n >= (SELECT count(distinct Salary) from Employee b WHERE a.Salary <= b.Salary) order by a.Salary desc;

43.Write an SQL query to fetch departments along with the total salaries paid for each of them.
= SELECT DEPARTMENT, sum(Salary) from Employee group by DEPARTMENT;

44.Write an SQL query to fetch the names of workers who earn the highest salary.
=SELECT FIRST_NAME, SALARY from Employee WHERE SALARY=(SELECT max(SALARY) from Employee );










